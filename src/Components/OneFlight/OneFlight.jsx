//styles
import styles from './OneFlight.module.scss'

export default function OneFlight({ data }) {
    try {
        const {
                duration,
                segments: [
                    {
                        airline: { caption: airlineName },
                        departureAirport: {
                            caption: departureAirportName,
                            uid: departureAirportCode
                        },
                        departureCity: { caption: departureCity },
                        departureDate
                    }
                ]
            } = data,
            {
                arrivalAirport: { caption: arrivalAirportName, uid: arrivalAirportCode },
                arrivalCity: { caption: arrivalCity },
                arrivalDate
            } = data.segments[data.segments.length - 1],
            transferCount = data.segments.length - 1

        function countTime() {
            const hoursRemain = Math.floor(duration / 60)
            const minsRemain = duration % 60
            return hoursRemain ? `${hoursRemain} —á ${minsRemain} –º–∏–Ω` : `${minsRemain} –º–∏–Ω`
        }
        function formatDate(date) {
            const monthMap = [
                    '—è–Ω–≤',
                    '—Ñ–µ–≤',
                    '–º–∞—Ä',
                    '–∞–ø—Ä',
                    '–º–∞–π',
                    '–∏—é–Ω',
                    '–∏—é–ª',
                    '–∞–≤–≥',
                    '—Å–µ–Ω',
                    '–æ–∫—Ç',
                    '–Ω–æ—è',
                    '–¥–µ–∫'
                ],
                dayMap = ['–≤—Å', '–ø–Ω', '–≤—Ç', '—Å—Ä', '—á—Ç', '–ø—Ç', '—Å–±'],
                dateObj = new Date(date)
            const timeStr = (
                    <span className={styles.time}>{`${dateObj.getHours()}:${
                        dateObj.getMinutes() || '00'
                    }`}</span>
                ),
                dateStr = (
                    <span className={styles.blueText}>{`${dateObj.getDate()} ${
                        monthMap[dateObj.getMonth()]
                    }. ${dayMap[dateObj.getDay()]}`}</span>
                )
            return [timeStr, dateStr]
        }
        const departureTimeArr = formatDate(departureDate), //Call once, use twice
            arrivalTimeArr = formatDate(arrivalDate).reverse() //Call once, use twice
        return (
            <div className={styles.oneFlight}>
                <div className={styles.route}>
                    {departureCity}, {departureAirportName}
                    <span className={styles.blueText}> ({departureAirportCode}) ‚ûû </span>
                    {arrivalCity}, {arrivalAirportName}
                    <span className={styles.blueText}> ({arrivalAirportCode})</span>
                </div>
                <div className={styles.timing}>
                    <div>
                        {departureTimeArr[0]} {departureTimeArr[1]}
                    </div>
                    <div className={styles.travelTime}>
                        üïì {countTime()}
                        {!!transferCount && (
                            <span className={styles.transfer}>{transferCount} –ø–µ—Ä–µ—Å–∞–¥–∫–∞</span>
                        )}
                    </div>
                    <div>
                        {arrivalTimeArr[0]} {arrivalTimeArr[1]}
                    </div>
                </div>
                <div>–†–µ–π—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç {airlineName}</div>
            </div>
        )
    } catch (e) {
        console.warn(data)
    }
}
